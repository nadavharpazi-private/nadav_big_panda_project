steps to build and run program:
===============================

1. git clone:
https://github.com/nadavharpazi-private/nadav_big_panda_project.git

2. compile and build project (easiest is to use already existing IntelliJ project),
assuming JDK 1.8 is installed

3. running on windows:
run either from intelliJ or go to the root directory of the project and run:
java.exe -Dfile.encoding=UTF-8 -classpath out\artifacts\big_panda_project_jar\big_panda_project.jar big_panda_project.main

4. running on mac:
run either from intelliJ or go to the root directory of the project and run:
java -Dfile.encoding=UTF-8 -classpath out/artifacts/big_panda_project_jar/big_panda_project.jar big_panda_project.main

5. optional parameters:
debug_level <level> (possible values are: 0/1/2/3/4/5, default is 1, which is debug)
port <port number> (default is 9000)

6. running example:
===================
to run on windows, on port 8000, with verbose debug level, run:
java.exe -Dfile.encoding=UTF-8 -classpath out\artifacts\big_panda_project_jar\big_panda_project.jar big_panda_project.main debug_level 0 port 8000

7. To access the stats API, go to http://localhost:9000/stats
(or http://localhost:8000/stats if port was changed as in the example above)

8. final question:
"3 things you would improve in your submission.":
1. I would check if the current performance is good enough (product wise), and if needed scale up the solution with full multi-threading.
2. I would complete timers, logging and debug.
3. I would complete tests: unit tests, integration tests, etc. I have written only one test file as an example.

p.s.
Of course there are many other possible improvements.
I'm just listing some which are more product oriented, so these need to be discussed with relevant product people:
-data persistence
-real web API
-consider separation to services (if needed for scaling) possibly with kubernetes




